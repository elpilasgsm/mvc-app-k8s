# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - master

pool:
  vmImage: ubuntu-latest

steps:
  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx1072m -DskipTests=true'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: false
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'package'
  - task: Docker@2
    inputs:
      containerRegistry: 'dockerhub'
      repository: 'duzaporozhets/web-app'
      command: 'buildAndPush'
      Dockerfile: 'docker/WebApp'
      buildContext: '.'
      tags: 'v2.$(Build.BuildId)'
  - task: Docker@2
    inputs:
      containerRegistry: 'dockerhub'
      repository: 'duzaporozhets/db-app'
      command: 'buildAndPush'
      Dockerfile: 'docker/Database'
      buildContext: '.'
      tags: 'v2.$(Build.BuildId)'
  - task: HelmInstaller@0
    inputs:
      helmVersion: '2.14.1'
      installKubectl: true
  - task: HelmDeploy@0
    name: helm_init_client_only
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscription: 'Subscription for tests (45b00e9e-97e3-4264-ade0-4609a447b712)'
      azureResourceGroup: 'mvcapp'
      kubernetesCluster: 'mvcapp'
      namespace: 'helm-deployement'
      command: 'init'
      arguments: '--client-only'
  - task: HelmDeploy@0
    inputs:
      command: 'package'
      chartPath: 'charts/mvnchart'
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Pipeline.Workspace)'
      artifact: 'drop'
      publishLocation: 'pipeline'